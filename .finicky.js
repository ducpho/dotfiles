// Generated by Finicky Kickstart
// Save as ~/.finicky.js

const googleDriveApp = {
    browser: ({ urlString }) => ({
        name: "Google Drive",
        profile: "Duc Pho", // use whatever profile created the application shortcut
        args: [
            `--app-id=aghbiahbpaijignceidepookljebhfak`, // my app ID for my Google Meet application shortcut
            `--app-launch-url-for-shortcuts-menu-item=${urlString}`,
            // notice I'm not passing urlString as an array entry, since Chrome Application Shortcuts don't like that
        ],
    }),
}

module.exports = {
    defaultBrowser: "Firefox Developer Edition",
    // Hide the finicky icon from the top bar. Default: false
    options: {
        hideIcon: true,
    },
    handlers: [{
            match: finicky.matchHostnames(["drive.google.com", "docs.google.com"]),
            browser: "Google Chrome"
        },
        {
            match: /^https?:\/\/0\.0\.0\.0:8000$/,
            browser: "Google Chrome"
        },
        {
            match: [
                "zoom.us/*",
                finicky.matchDomains(/.*\zoom.us/),
                /zoom.us\/j\//,
            ],
            browser: "us.zoom.xos"
        }

    ],
    rewrite: [{
        match: () => true, // Execute rewrite on all incoming urls to make this example easier to understand
        url({ url }) {
            const removeKeysStartingWith = ["utm_", "uta_"]; // Remove all query parameters beginning with these strings
            const removeKeys = ["fblid", "gclid"]; // Remove all query parameters matching these keys

            const search = url.search
                .split("&")
                .map((parameter) => parameter.split("="))
                .filter(([key]) => !removeKeysStartingWith.some((startingWith) => key.startsWith(startingWith)))
                .filter(([key]) => !removeKeys.some((removeKey) => key === removeKey));

            return {
                ...url,
                search: search.map((parameter) => parameter.join("=")).join("&"),
            };
        },
    }],
}
